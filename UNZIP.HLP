


1 UnZip
    UnZip lists, tests, or extracts files from a ZIP archive (an archive
    format  commonly  used  on  many  different  systems).   The default
    behavior (with no options) is to extract into the current  directory
    (and  subdirectories  below  it)  all  files  from the specified ZIP
    archive.  A companion program, Zip, creates ZIP archives.

    Info-ZIP UnZip and Zip were intended to be compatible with  archives
    created  by  PKWARE's  PKZIP  and  PKUNZIP  programs (originally for
    MS-DOS), but in many cases the program options or default  behaviors
    differ.  Nowadays, many other programs are available which work with
    ZIP archives.

    Note:  Beginning with  UnZip  version  6.10,  the  old  command-line
    parser  has  been  replaced  by  one  like the one used in Zip.  One
    significant change is that  option  negation  now  uses  a  TRAILING
    hyphen  ("-"),  so,  for  example,  -B- negates the -B option.  This
    change was made because a double hyphen ("--") now introduces a long
    option.   To  list  all  available  options  for  a particular UnZip
    program, use the command:
        unzip --show-options

    To display the extended help, use the command:
        unzip -hh
    The extended help  may  be  more  current  than  this  manual  page,
    especially between full product releases.

    Usage:
        unzip [ unzip_options ] [ file[.zip] ] [ member ... ]
        unzip -Z [ zipinfo_options ] [ file[.zip] ] [ member ... ]
2 Parameters

file[.zip]

    File specification for the ZIP archive(s) with  optional  wildcards.
    UnZip  will perform actions specified for every zipfile matching the
    specification.  Default file specification is SYS$DISK:[].ZIP.  Note
    that  self-extracting ZIP files are supported; just specify the .EXE
    suffix yourself.

[list]

    An optional list of archive members to be processed; if no  list  is
    given,  all  archive members are processed.  Expressions may be used
    to match  multiple  members.   Expressions  should  be  enclosed  in
    double-quotes  to prevent interpretation by DCL.  Multiple filenames
    should be separated by blanks.  Each file specification  is  similar
    to a Unix egrep expression and may contain:

         *       matches a sequence of 0 or more characters
         ?       matches exactly 1 character
         [...]   matches any single character found inside the brackets;
                 ranges are specified by a beginning character, a hyphen,
                 and an ending character.  If a '!' or '^' immediately
                 follows the left bracket, then any character not in the
                                                                Page 2


                 given range is matched.
                 Hint: To specify a verbatim left bracket '[', the
                       three-character sequence "[[]" has to be used.


[-x xlist]

    An optional list of archive members to be excluded from  processing.
    The xlist overrides any files included in the normal list.

[-d out_dir]

    Optional directory specification to be used as target root directory
    for  files  to  be  extracted.   Directory  should  be  specified in
    "[.foo]" format rather than "foo.dir" or "foo/" format.
2 Options
    The default action of UnZip is to extract all zipfile entries.   The
    following options and modifiers can be provided:

       -Z   ZipInfo mode
       -c   extract files to SYS$OUTPUT (terminal)
       -f   freshen existing files (replace if newer); create none
       -h   show brief help screen and exit quietly
       -l   list archive files (short format)
       -p   extract files to SYS$OUTPUT; no informational messages
       -t   test archive files
       -T   set zipfile timestamps to that of each archive's newest entry
       -u   update existing files; create new ones if needed
       -v   list archive files (verbose format)
       -z   display only the archive comment

     MODIFIERS
       -a   extract text files in standard VMS text file format
       -aa  extract all files as text
       -b   auto-extract only binary files in fixed 512-byte record format
       -bb  extract all files as binary in fixed 512-byte record format
       -j   junk paths (don't recreate archive's directory structure)
       -n   never overwrite or make a new version of an existing file
       -o   always make a new version (-oo: overwrite orig) existing file
       -q   perform operations quietly (-qq => even quieter)
       -C   match filenames case-insensitively
       -D   do not restore any timestamps (--D restore them even for dirs)
       -L   convert filenames to lowercase if created under DOS, VMS, etc.
       -M   feed screen output through built-in "more" pager
       -P<password> supply decryption password on the cmd line (insecure!)
       -S   use Stream_LF record format to extract text files (with -a[a])
       -V   retain (VMS) file version numbers
       -X   restore owner/ACL protection info (may require privileges)
       -Y   treat ".nnn" suffix as version number ("a.b.3" -> "a.b;3")
       -:   allow "../" path components to traverse across top extract dir
       -2   force creation of ODS2-compatible file names

    Note that uppercase options (-C, -D, -L, -M, -P, -S, -T, -V, -X, -Y,
    and -Z) must be specified in quotes (unless SET PROC/PARSE=EXTEND is
    set).  For example:
                                                                Page 3


        unzip "-VX" -a zipfile

    When extracting to SYS$OUTPUT (-c or -p  options)  redirected  to  a
    file,  you  may want to override the default text file conversion by
    specifying the -b option.  A single "-b" option switches to  "binary
    piping"  mode  for  Zip  entries marked as non-text, only.  To force
    "binary piping" mode even for Zip file entries marked as  text,  the
    "-bb" option should be used.  (Please note that a later "-a" cancels
    any -b option, see below.)

    The output conversion options -b and -a may be combined  to  perform
    binary  conversions  on  binary  files  and  text conversion on text
    files.  But note:  For compatibility with  implementation  on  other
    systems,  -b  cancels  any -a option; to get the intended result, -a
    must be specified AFTER -b.  And, in combination, "text" recognition
    takes  precedence; this means that -bba (-bb -a) has the same effect
    as -ba (-b -a), and -aa overrides binary conversion for ALL files.

    The conversion option -S is only effective when used  together  with
    -a  or  -aa.   When specified, "text" files are written in Stream-LF
    record format instead of the VMS default of  Variable-Length  record
    format.   (When  no  conversion  options  are specified, all non-VMS
    entries are always written as Stream-LF files.)

    Please note that using the "-P<password>" option is higly  insecure,
    the  plaintext password may be seen by others.  For this reason (and
    because  of  lack  of  space),  the  "-P<password>"  option  is  not
    advertised on UnZip's online help screen.
2 Exit_Status
    On VMS, UnZip's UNIX-style exit values  are  mapped  into  VMS-style
    status  codes  with  facility  code  1954  =  %x7A2,  and  with  the
    inhibit-message (%x10000000) and facility-specific (%x00008000) bits
    set:

       %x17A28001                        normal exit
       %x17A28000 + 16*UnZip_error_code  warnings
       %x17A28002 + 16*UnZip_error_code  normal errors
       %x17A28004 + 16*UnZip_error_code  fatal errors

    Note that multiplying the UNIX-style UnZip error code by  16  places
    it  conveniently  in  the hexadecimal representation of the VMS exit
    code, "__" in %x17A28__s, where  "s"  is  the  severity  code.   For
    example,  a  missing  archive  might cause UnZip error code 9, which
    would be transformed into the VMS exit status %X17A28092.

    The UnZip VMS exit codes include severity values  which  approximate
    those defined by PKWARE, as shown in the following table:

        VMS     UnZip err
      severity    code     Error description
     ----------+---------+----------------------------------------------
      Success       0      Normal.  No errors or warnings detected.
      Warning       1      One or more warnings  were  encountered, but
                           processing  completed  successfully  anyway.
                           This  includes  archives  where  one or more
                                                                Page 4


                           (but not all)  files were skipped because of
                           unsupported compress or encrypt methods,  or
                           bad passwords.
      Error         2      Error in the archive format.  Processing may
                           have completed  successfully  anyway.   Some
                           defects in archives (made by other programs)
                           can be repaired transparently.
      Fatal         3      Severe error in the archive format. Process-
                           ing probably failed immediately.
      Fatal         4      Memory allocation failed in program initial-
                           ization.
      Fatal         5      Memory  allocation  failed  in password pro-
                           cessing.
      Fatal         6      Memory allocation failed while decompressing
                           to disk.
      Fatal         7      Memory allocation failed while decompressing
                           in memory.
      Fatal         8      Memory  allocation  failed    (reserved  for
                           future use).
      Error         9      Specified archive files were not found.
      Error        10      Invalid command-line options or parameters.
      Error        11      No files matched selection criteria.
      Fatal        50      Disk full.
      Fatal        51      Unexpected  end-of-file  while  reading  the
                           archive.
      Error        80      User interrupt (Ctrl/C).
      Error        81      No files were processed,  because  of unsup-
                           ported compress or encrypt methods.
      Error        82      No  files  were  processed,  because  of bad
                           password(s).
      Fatal        83      Large-file archive could not be processed by
                           this small-file program.
2 Logical_Names
    UnZip allows to modify its default behaviour  by  specifying  option
    defaults   via  the  UNZIP_OPTS  logical  name.   For  example,  the
    following will cause UnZip to restore  owner/protection  information
    and perform all operations at quiet-level 1 by default:

        define UNZIP_OPTS "-qX"

    Note  that  the  quotation  marks  here  are  required  to  preserve
    lowercase  options  (opposite  of  the  command-line  behavior).  To
    negate a default option on the command line, add one or  more  minus
    signs  before  the  option letter, in addition to the leading switch
    character `-':

        unzip --ql zipfile
    or
        unzip -l-q zipfile

    At  present  it  is  not  possible  to  decrement  an  option  below
    zero--that is, more than a few minuses have no effect.

    UNZIP_OPTS may be defined as a symbol rather than  a  logical  name,
    but if both are defined, the logical name takes precedence.
                                                                Page 5


2 Authors
    Info-ZIP; currently maintained by Christian  Spieler.   VMS  support
    maintained  by  Christian  Spieler  and  Hunter Goatley.  Originally
    based on a program by Samuel H.  Smith.

    VMS on-line help ported from UNZIP.TXT by Hunter Goatley.
