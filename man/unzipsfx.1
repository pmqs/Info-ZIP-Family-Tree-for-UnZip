.\"  Copyright (c) 1990-2013 Info-ZIP.  All rights reserved.
.\"
.\"  See the accompanying file LICENSE, version 2009-Jan-02 or later
.\"  (the contents of which are also included in unzip.h) for terms of use.
.\"  If, for some reason, all these files are missing, the Info-ZIP license
.\"  also may be found at:  ftp://ftp.info-zip.org/pub/infozip/license.html
.\"
.\" unzipsfx.1 by Greg Roelofs
.\"
.\" =========================================================================
.\" define .EX/.EE (for multiline user-command examples; normal Courier font)
.de EX
.in +4n
.nf
.ft CW
..
.de EE
.ft R
.fi
.in -4n
..
.\" =========================================================================
.TH UNZIPSFX 1L "21 May 2013 (v6.10)" "Info-ZIP"
.SH NAME
unzipsfx \- self-extraction (SFX) program.  Append a ZIP archive to it
to make a self-extracting archive bundle.
.PD
.SH SYNOPSIS
.B name_of_unzipsfx+archive_bundle
.RB "[ " unzip_options " ]"
.RI "[ " member " ... ]"
.PP
.\" =========================================================================
.SH DESCRIPTION
\fIUnZipSFX\fP is a special edition of \fIUnZip\fP which is designed to
be attached to the beginning of an existing, ordinary ZIP archive to
form a self-extracting (SFX) archive.  Unlike the normal \fIUnZip\fP
program, which works on an archive specified on its command line,
\fIUnZipSFX\fP works on an archive which has been appended to itself.
.PP
Minimizing the size of a self-extracting archive, means minimizing the
size of the \fIUnZipSFX\fP program itself.  Thus \fIUnZipSFX\fP is
normally built without some of the less important features found in the
normal \fIUnZip\fP program.  Among these are the help/usage displays
(\fB\-h\fP, \fB\-hh\fP), the listing and diagnostic functions
(\fB\-l\fP, \fB\-v\fP), the ability to process some older compression
methods ("Implode", "Reduce", "Shrink"), and, by default, some newer
compression methods (bzip2, LZMA, PPMd) and any encryption methods.
.PP
Starting with \fIUnZipSFX\fP version 5.50, the ability to extract to a
directory other than the current one (\fB\-d\ dest_dir\fP) has been
enabled by default.  Some or all of the optional compression and/or
encryption methods can be enabled at build time, at the cost of
increasing the size of the resulting \fIUnZipSFX\fP program.
.PP
Starting with \fIUnZip\fP version 5.50, another build-time option adds a
simple "run command after extraction" feature.  This feature is
currently incompatible with the "extract to different directory"
(\fB\-d\ dest_dir\fP) feature, and remains disabled by default.
.PP
All the build-time options controlling \fIUnZipSFX\fP features should be
explained in the \fIUnZip\fP installation instructions (INSTALL).  Note
that the features (such as optional encryption or compression methods)
which are \fIavailable\fP in an \fIUnZipSFX\fP executable are determined
when the \fIUnZipSFX\fP executable is built.  However, the features
which are \fIneeded\fP are determined when the ZIP archive is
created.  The user must decide which optional features to include in or
exclude from the \fIUnZipSFX\fP executable, and then use only the
available \fIUnZipSFX\fP features when creating an archive for use as a
self-extracting archive.  Enabling optional features in \fIUnZipSFX\fP
makes the executable bigger (and hence SFX archives made with it).  Of
course, the greater efficiency of some optional compression method might
save enough space to compensate for the bigger \fIUnZipSFX\fP executable
which would be needed to deal with it.  And, if encryption is desired,
then the \fIUnZipSFX\fP executable must be able to deal with that.
.PP
Users with complex requirements may find it useful to build multiiple
\fIUnZipSFX\fP executables with different feature sets for different
purposes.  The user is responsible for managing multiple
\fIUnZipSFX\fP executables.  The \fIUnZip\fP builders offer no tools to
help, and, without a "\fB\-v\fP" report, determining the capabilities of
an \fIUnZipSFX\fP executable is not very easy.  The user is also
responsible for testing a self-extracting archive on the target system,
to ensure that the \fIUnZipSFX\fP executable used has all the features
it needs to process the attached archive.
.IP
Note that the \fIUnZipSFX\fP executable in a self-extracting archive is
a real executable program, and so is not generally portable from one
operating system or hardware architecture to another.  The ZIP archive
within a self-extracting archive \fIcan\fP be processed anywhere using a
normal \fIUnZip\fP program.  (At worst, \fIUnZip\fP will emit a warning
like "nnnn extra bytes at beginning or within zipfile", but using
"zip\ \-A" on an SFX bundle will prevent even that annoyance.)
.PD
.\" =========================================================================
.SH ARGUMENTS
.TP
.IR member " ..."
An optional list of archive members to be processed, separated by
spaces.  If no member list is specified, then all archive members are
processed.  Wildcard patterns may be used to match multiple members.  These
wildcard expressions are similar to those supported (for "globbing") in
commonly used Unix shells (\fIcsh\fP, \fIksh\fP, \fIsh\fP, and so on)
and may contain:
.RS
.IP *
matches a sequence of 0 or more characters.
.IP ?
matches exactly 1 character.
.IP [.\|.\|.]
matches any single character found inside the brackets.  Ranges are
specified by a beginning character, a hyphen, and an ending
character.  If an exclamation point ("!") or a caret ("^") follows the
left bracket, then the range of characters within the brackets is
complemented.  That is, anything \fIexcept\fP the characters inside the
brackets is considered a match.  To specify a literal left bracket, use
the three-character sequence "[[]".
.RE
.IP
Be sure to escape or quote any character(s) that might otherwise be
interpreted or modified by the operating system, particularly Unix
shells.
.\" =========================================================================
.SH OPTIONS (Primary Mode)
Options in this group (\fB\-c \-f \-p \-t \-u \-z\fP)
specify the primary mode of operation of  \fIUnZipSFX\fP.  Only one of
these primary mode options may be specified.
.PP
.PD 0
.B \-c
.TP
.PD
.B \-\-to\-stdout
.br
Primary Mode.  Extract files to stdout/screen.  This option is similar
to the \fB\-p\fP option except that the name of each file is displayed
as it is extracted, and the \fB\-a\fP option is allowed, which can
provide automatic ASCII-EBCDIC conversion, where appropriate.
.PP
.PD 0
.B \-f
.TP
.PD
.B \-\-freshen
.br
Primary Mode.  Freshen existing files.  That is, extract only those
files that already exist on disk and that are newer than the disk
copies.  By default, \fIUnZipSFX\fP queries before overwriting, but the
\fB\-o\fP option may be used to suppress the queries.  Note that on many
operating systems, the TZ (timezone) environment variable must be set
correctly in order for \fB\-f\fP and \fB\-u\fP to work properly.  (On
Unix the variable is usually set automatically.)  The reasons for this
are somewhat subtle but have to do with the differences between
DOS-format file times (always local time) and Unix-format times (always
UTC) and the necessity to compare the two.  A typical TZ value is
"PST8PDT" (US Pacific time with automatic adjustment for Daylight Saving
Time).
.PP
.PD 0
.B \-p
.TP
.PD
.B \-\-pipe\-to\-stdout
.br
Primary Mode.  Extract files to stdout (pipe).  Only the actual file
data for the members are sent to stdout (no file names, or other
information, as would be displayed with \fB\-c\fP), and the files are
always extracted in binary format, just as they are stored (no
line-ending or ASCII-EBCDIC conversions).
.PP
.PD 0
.B \-t
.TP
.PD
.B \-\-test
.br
Primary Mode.  Test archive members.  Testing means that each archive
member is extracted in memory (expanding and decrypting, as needed), but
not written to a file.  The resulting CRC (cyclic redundancy check, an
enhanced checksum) of the extracted data is then compared with the
original file's stored CRC value, and an error message is emitted if a
CRC mismatch is detected.
.PP
.PD 0
.B \-u
.TP
.PD
.B \-\-update
.br
Primary mode.  Update existing files and create new ones if
needed.  This mode performs the same function as the Freshen (\fB\-f\fP)
mode, extracting (with query) files that are newer than those with the
same name on disk, but it also extracts those files that do not already
exist on disk.  See \fB\-f\fP, above, for information on setting the
timezone properly.
.PP
.PD 0
.B \-z
.TP
.PD
.B \-\-zipfile\-comment
.br
Primary mode.  Display only the archive comment.
.\" --------------------------------------------------------------------
.SH OPTIONS (Ordinary)
.PP
.PD 0
.B \-2
.TP
.PD
.B \-\-force\-ods2
.br
[VMS] Convert extracted file names to ODS2-compatible names, even on an
ODS5 file system.  By default, if the destination file system is ODS5,
case is preserved, and extended file name characters are caret-escaped
as needed, while if the destination file system is ODS2, ODS2-invalid
characters are replaced by underscores.
.PP
.PD 0
.B \-a
.TP
.PD
.B \-\-ascii
.br
Convert text files.  Ordinarily, all files are extracted exactly as they
are stored, byte-for-byte.  With \fB\-a\fP, line endings in a text
file are adjusted to the local standard as the file is extracted.  When
appropriate, ASCII<\-\->EBCDIC conversion is also done.
.IP
\fIZip\fP (or a similar archiving program) identifies files as "binary"
or "text" when they are archived.  (A short-format \fIZipInfo\fP report
denotes a binary file with a "b", and a text file with a "t".)
\fIZip\fP's identification of text files may not be perfect, so
\fIUnZipSFX\fP prints "\fC[text]\fR" or "\fC[binary]\fR" as a visual check
for each file it extracts with \fB\-a\fP.  The \fB\-aa\fP option forces
all files to be extracted (and converted) as text, regardless of the
supposed file type.
.IP
[VMS] On VMS, for archives with VMS attribute information (made with
"zip\ \-V" or "ZIP\ /VMS"), files are always created with their original
record formats.  For archives without VMS attribute information (not
made with "zip\ \-V" or "ZIP\ /VMS"), all files are normally created
with Stream_LF record format.  With \fB\-a\fP, text files are normally
created with variable-length record format, but adding \fB\-S\fP gives
them Stream_LF record format.  With \fB\-aa\fP, all files are treated as
text files.  See also \fB\-b\fP and \fB\-S\fP.
.IP
Support for line-ending conversion for text files may be removed in some
future \fIUnZipSFX\fP version, because the creator of a self-ectracting
archive should easily be able to ensure that text files have the
appropriate characteristics for the SFX target system (and expecting the
SFX user to specify the appropriate option is unreliable).  ASCII-EBCDIC
conversion must continue to be supported, because the ZIP archive format
implies ASCII storage of text files.
.PP
.PD 0
.B \-b
.TP
.PD
.B \-\-binary
.br
[Tandem, VMS] Selects the file record format used when extracting binary
files.  -b may conflict or interact with -a in different ways on
different system types.  -b is ignored on systems other than Tandem and
VMS.
.IP
\fIZip\fP (or a similar archiving program) identifies files as "binary"
or "text" when they are archived.  (A short-format \fIZipInfo\fP report
denotes a binary file with a "b", and a text file with a "t".)
.\" \fIZip\fP's identification of text files may not be perfect, so
.\" \fIUnZipSFX\fP prints "\fC[binary]\fR" or "\fC[text]\fR" as a visual check
.\" for each file it extracts with \fB\-b\fP.  The \fB\-bb\fP option forces
.\" all files to be extracted (and converted) as binary, regardless of the
.\" supposed file type.
.IP
[Tandem] Force the creation files with filecode type 180 ('C') when
extracting archive members marked as "text". (On Tandem, \fB\-a\fP is
enabled by default, see above).
.IP
[VMS] On VMS, for archives with VMS attribute information (made with
"zip\ \-V" or "ZIP\ /VMS"), files are always created with their original
record formats.  For archives without VMS attribute information (not
made with "zip\ \-V" or "ZIP\ /VMS"), files are normally created with
Stream_LF record format.  With \fB\-b\fP, binary files are created with
fixed-length, 512-byte record format.  With \fB\-bb\fP, all files are
treated as binary files.  When extracting to standard output (\fB\-c\fP
or \fB\-p\fP option in effect), the default conversion of text record
delimiters is disabled for binary files (with \fB\-b\fP), or for all
files (with \fB\-bb\fP).
.PP
.PD 0
.B \-C
.TP
.PD
.BR \-\-ignore\-case "\ \ \ \ ([CMS, MVS] " \-\-CMS\-MVS\-lower )
.br
Use case-insensitive name matching for file names in the file list and
the \fB\-x\fP excluded-file list on the command line.  By default,
case-sensitive matching is done.  For example, specifying
"\fCmakefile\fR" on the command line will match \fIonly\fP "makefile" in
the archive, not "Makefile" or "MAKEFILE".  On many systems, the local
file system is case-insensitive, so case-insensitive name matching would
be more natural.  With \fB\-C\fP, "\fCmakefile\fR" would match
"makefile", "Makefile", or "MAKEFILE".
.IP
\fB\-C\fP does not affect the matching of archive members to existing
files on the extraction path.  So, on a case-sensitive file system,
\fIUnZipSFX\fP will never try to overwrite a file "FOO" when extracting a
member named "foo"!
.PP
.PD 0
.B \-c
.TP
.PD
.B \-\-to\-stdout
.br
Primary Mode.  Extract files to stdout/screen.  For details, see Primary
Mode options.
.PP
.PD 0
.B \-D
.TP
.PD
.B \-\-dir\-timestamps
.br
Control timestamps on extracted files and directories.  By default,
\fIUnZipSFX\fP restores timestamps for extracted files, but not for
directories it creates.  Specifying \fB\-D\fP tells \fIUnZipSFX\fP not to
restore any timestamps.  Specifying \fB\-D\-\fP tells \fIUnZipSFX\fP to
restore timestamps for directories as well as other items.  \fB\-D\-\fP
works only on systems that support setting timestamps for directories
(currently ATheOS, BeOS, MacOS, OS/2, Unix, VMS, Win32).  On  other
systems, \fB\-D\-\fP has no effect.
.IP
[Non-VMS] Timestamp restoration behavior changed between UnZip versions
6.00 and 6.10.  The following table shows the effects of various
\fB\-D\fP options for both versions.
.IP
.EX
       UnZip version      |
      6.00    |   6.10    | Restore timestamps on:
   -----------+-----------+------------------------
       -DD    |    -D     | Nothing.
       -D     | (default) | Files, not directories.
    (default) |    -D-    | Files and directories.
.EE
.IP
[VMS] The old behavior on VMS was the same as the new behavior on all
systems.  (The old negated \fB\-\-D\fP option is now \fB\-D\-\fP,
because of changes to the command-line parser.)
.PP
.PD 0
.B \-d dest_dir
.TP
.PD
.B \-\-extract\-dir dest_dir
.br
Specifies a destination directory for extracted files.  By default,
files are extracted (and subdirectories created) in the current
directory.  With \fB\-d dest_dir\fP, extraction is done into the
specified directory, instead.
.IP
The option and directory may be concatenated without any white space
between them, but this may cause normal shell behavior to be
suppressed.  For example, "\fC\-d\ ~\fR" (tilde) is expanded by Unix
shells into the name of the user's home directory, but "\fC\-d~\fR"
is treated as a literal "\fB~\fP" subdirectory of the current directory.
.IP
[VMS] On VMS, only a VMS-style device:[directory] specification is
permitted.
.IP
This option may be disabled at build time in \fIUnZipSFX\fP.
.PP
.PD 0
.B \-F
.TP
.PD
.B \-\-keep\-nfs
.br
[Acorn] Suppress removal of NFS filetype extension from stored
filenames.
.IP
[non-Acorn systems supporting long filenames with embedded commas,
and only if compiled with ACORN_FTYPE_NFS defined] Translate
filetype information from ACORN RISC OS extra field blocks into a
NFS filetype extension and append it to the names of the extracted
files.  (When the stored filename appears already to have an appended
NFS filetype extension, it is replaced by the info from the extra
field.)
.PP
.PD 0
.B \-f
.TP
.PD
.B \-\-freshen
.br
Primary Mode.  Freshen existing files.  For details, see Primary Mode
options.
.PP
.PD 0
.B \-I char_set
.TP
.PD
.B \-\-iso\-char\-set char_set
.br
[Unix] Select ISO character set \fIchar_set\fP.
.PP
.PD 0
.B \-J
.TP
.PD
.B \-\-junk\-attrs
.br
[BeOS] Junk file attributes.  The file's BeOS file attributes are not
restored, only the file's data.
.IP
[MacOS] Ignore MacOS extra fields.  All Macintosh-specific info is
skipped.  AppleDouble files are restored as separate files.
.PP
.PD 0
.B \-j[=depth]
.TP
.PD
.B \-\-junk\-dirs[=depth]
.br
Junk directories.  With \fB\-j\fP, all directory information is stripped
from an archive member name, so all files are extracted into the
destination directory.  (See also \fB\-d\fP.)
.IP
If a depth (\fB=depth\fP, where \fBdepth\fP is a positive integer) is
specified, then that number of directory levels will be stripped from an
archive member name.  For example, an archive member like
"a/b/c/d/ee.txt" would normally be extracted as "a/b/c/d/ee.txt".  With
\fB\-j\fP, it would be extracted as "ee.txt".  With \fB\-j=2\fP, the
first two directory levels would be stripped, so it would be extracted
as "c/d/ee.txt".
.PP
.PD 0
.B \-\-jar
.br
Treat archive(s) as Java JAR.  Over-simplification in Java JAR archives
can cause \fIUnZipSFX\fP to transform UTF-8 file names according to
inappropriate (MS-DOS) rules, yielding corrupt names on extracted files
(typically those with character codes 128-255).  Archives containing a
Java "CAFE" extra field should be detected automatically, and handled
correctly, but not all JAR archives include that extra
field.  Specifying \-\-jar tells \fIUnZipSFX\fP to expect UTF-8 file names,
regardless of whether the archive contains a "CAFE" extra field.
.PP
.PD 0
.B \-k
.TP
.PD
.B \-\-keep\-permissions
.br
[AtheOS, BeOS, Unix, VMS] Control how archived permissions or
protections are restored on extracted files and directories.
.IP
By default, archived permissions are restored with some limitations.  On
AtheOS, BeOS, and Unix, the current umask value is applied (to the
normal user/group/other permissions).  On VMS, the current default
protection is applied to the UIC-based (SOGW) protections.
.IP
With \-k, the archived permissions are restored without regard to the
Unix umask or VMS default protection.  (This was the default behavior in
UnZip versions before 6.10.)
.IP
With \-k\-, the archived permissions are ignored, so only the Unix umask
or VMS default protection is effective.  (On VMS, directories are always
created without any Delete access.)
.IP
On AtheOS, BeOS, and Unix, the SUID/SGID/Tacky permission bits are
controlled by the \-K/\-\-keep\-s\-attrs option, regardless of the
\-k/\-\-keep\-permissions setting.
.PP
.PD 0
.B \-ka
.TP
.PD
.B \-\-keep\-acl
.br
[VMS] Restore ACLs on extracted files and directories.
.PP
.PD 0
.B \-L
.TP
.PD
.B \-\-lowercase\-names
.br
Convert to lowercase any filename originating on an uppercase-only
operating system or file system.  (This was \fIUnZipSFX\fP's default
behavior in versions before 5.11.  The current default behavior is the
same as the old behavior with the \fB\-U\fP option.  \fB\-U\fP is now
used for another purpose.)
.IP
Depending on the archiver, files archived from single-case file systems
(old MS-DOS FAT, VMS ODS2, and so on) may be stored as all-uppercase
names; this can be ugly or inconvenient when extracting to a
case-preserving file system such as OS/2 HPFS or a case-sensitive one
such as on Unix.  By default, \fIUnZipSFX\fP lists and extracts such
filenames exactly as they're stored (excepting truncation, conversion of
unsupported characters, an so on).  With \fB\-L\fP, the names of all
files from certain systems will be converted to lowercase.  With
\fB\-LL\fP, all file names will be down-cased, regardless of the
originating file system.
.PP
.PD 0
.BR \-M "\ \ \ \ [CMS,MVS] Or: " \-m )
.TP
.PD
.B \-\-more
.br
Pipe all output through an internal pager similar to the Unix
\fImore\fP(1) command.  At the end of a screenful of output, \fIUnZipSFX\fP
pauses with a "\-\-More\-\-" prompt; the next screenful may be viewed by
pressing the Enter/Return key or the space bar.  \fIUnZipSFX\fP can be
terminated by pressing the "Q" key and, on some systems, the
Enter/Return key.  Unlike Unix \fImore\fP(1), there is no
forward-searching or editing capability.  Also, \fIUnZipSFX\fP doesn't
notice if long lines wrap at the edge of the screen, effectively
resulting in the printing of two or more lines and the likelihood that
some text will scroll off the top of the screen before being viewed.  If
the actual number of lines on the screen can not be determined, 24 lines
will be assumed.
.PP
.PD 0
.B \-n
.TP
.PD
.B \-\-never\-overwrite
.br
When extracting, never overwrite existing files.  If a file already
exists, then skip the extraction of that file without asking.  See also
-o (--overwrite).
.IP
By default, \fIUnZipSFX\fP queries the user before extracting any file that
already exists.  The user may choose to overwrite only the current file,
overwrite all files, skip extraction of the current file, skip
extraction of all existing files, or rename the current file (choose a
new name for the extracted file).
.IP
[VMS] On VMS, the usual query choices are to create a new version of an
existing file, to skip extraction, or to rename the current file.  In
the case where an archive member name includes a version number, and -V
("retain VMS file version numbers") is in effect, then an additional
query choice is offered: to overwrite the existing file.
.PP
.PD 0
.B \-O char_set
.TP
.PD
.B \-\-oem\-char\-set char_set
.br
[Unix] Select OEM character set \fIchar_set\fP.
.PP
.PD 0
.B \-o
.TP
.PD
.B \-\-overwrite
.br
When extracting, always overwrite existing files without
prompting.  This is a \fIdangerous\fP option, so use it with care.  (It
is often used with \fB\-f\fP, however, and is the only way to overwrite
directory EAs on OS/2.)  See also -n (--never-overwrite).
.IP
By default, \fIUnZipSFX\fP queries the user before extracting any file that
already exists.
.IP
[Non-VMS] On non-VMS systems, the user may choose to overwrite only the
current file, overwrite all files, skip extraction of the current file,
skip extraction of all existing files, or rename the current file
(choose a new name for the extracted file).
.IP
[VMS] On VMS, the usual query choices are to create a new version of an
existing file, to skip extraction, or to rename the current file.  In
the case where an archive member name includes a version number, and -V
("retain VMS file version numbers") is in effect, then an additional
query choice is offered: to overwrite the existing file.  In this case,
-o selects the "new version" choice, and -oo (or "-o -o") selects the
"overwrite" choice.
.PP
.PD 0
.B \-P password
.TP
.PD
.B \-\-password password
.br
[CRYPT_AES_WG, CRYPT_TRAD] \fB\-P\fP ("\fB\-\-password\fP") is valid
only if encryption support was enabled at build-time for the
\fIUnZipSFX\fP program.
.IP
Use \fIpassword\fP to decrypt encrypted archive members (if
any).  \fITHIS IS INSECURE!\fP  Many multi-user operating systems
provide ways for any user to see the current command line of any other
user.  Even on stand-alone systems, there is always the threat of
over-the-shoulder peeking.  Storing the plaintext password as part of a
command line in an automated script can be even less secure,  Whenever
possible, use the non-echoing, interactive prompt to enter
passwords.  Where security is truly important, use a strong encryption
method, such as AES, instead of the relatively weak encryption provided
by Traditional ZIP encryption. Or, use an external encryption program,
such as GnuPG, before archiving the file.  (Note that \fIZip\fP will
probably not be able to do significant compression on a file which has
already been encrypted.)
.PP
.PD 0
.B \-p
.TP
.PD
.B \-\-pipe\-to\-stdout
.br
Primary Mode.  Extract files to stdout (pipe).  For details, see Primary
Mode options.
.PP
.PD 0
.B \-q
.TP
.PD
.B \-\-quiet
.br
Perform operations quietly.  (\fB\-qq\fP: even more quietly).  By
default, \fIUnZipSFX\fP prints the names of the files it's extracting or
testing, the extraction methods, any member or archive comments that may
be stored in the archive, and possibly a summary when finished with each
archive.  The \fB\-q\fP[\fBq\fP] options suppress the printing of some
or all of these messages.
.PP
.PD 0
.B \-r
.TP
.PD
.B \-\-remove\-exts
.br
[Tandem] Remove file extensions.
.PP
.PD 0
.B \-S
.TP
.PD
.B \-\-stream_lf
.br
[VMS] Use Stream_LF record format when converting extracted text files
(\fB\-a\fP, \fB\-aa\fP), instead of the text-file default,
variable-length record format.
.IP
[VMS] On VMS, for archives with VMS attribute information (made with
"zip\ \-V"), files are always created with their original record
formats.  For archives without VMS attribute information (not made with
"zip\ \-V"), all files are normally created with Stream_LF record
format.  With \fB\-a\fP, text files are normally created with
variable-length record format, but adding \fB\-S\fP gives them Stream_LF
record format.  With \fB\-aa\fP, all files are treated as text
files.  See also \fB\-a\fP and \fB\-b\fP.
.PP
.PD 0
.B \-s
.TP
.PD
.B \-\-space_to_uscore
.br
Convert spaces in filenames to underscores.  Normally, on a system which
allows spaces in filenames, \fIUnZipSFX\fP extracts filenames with spaces
intact (for example, "\fCEA\ DATA.\ SF\fR").  Working with such file
names can be awkward, however, so \fB\-s\fP can be used to replace
spaces with underscores.
.PP
.PD 0
.B \-t
.TP
.PD
.B \-\-test
.br
Primary Mode.  Test archive members.  For details, see Primary Mode
options.
.PP
.PD 0
.B \-U
.TP
.PD
.B \-\-unicode
.br
[UNICODE_SUPPORT] Control UTF-8 handling.  When UNICODE_SUPPORT is
available, \fB\-U\fP forces \fIUnZipSFX\fP to escape all non-ASCII
characters from UTF-8 coded filenames as "#Uxxxx' (for UCS-2 characters,
or "#Lxxxxxx" for Unicode codepoints needing 3 octets).  This option is
provided mainly for debugging, when the fairly new UTF-8 support is
suspected of mangling extracted filenames.
.IP
\fB\-UU\fP disables the recognition of UTF-8 encoded filenames.  The
handling of filename codings within \fIUnZipSFX\fP falls back to the
behavior of pre-Unicode versions.
.IP
[old, obsolete usage] Leave filenames uppercase if created on MS-DOS,
VMS, and so on.  See \fB\-L\fP.
.PP
.PD 0
.B \-u
.TP
.PD
.B \-\-update
.br
Primary mode.  Update existing files and create new ones if needed.  For
details, see Primary Mode options.
.PP
.PD 0
.B \-V
.TP
.PD
.B \-\-keep\-versions
.br
[Non-CMS-MVS]  Retain VMS file version numbers.  VMS files can be stored
with a version number, in the format \fCfile.type;##\fR, where "##" is a
positive decimal number.  By default, the "\fC;##\fR" version numbers
are stripped, but this option allows them to be retained.  (On file
systems that limit filenames to particularly short lengths, the version
numbers may be truncated or stripped regardless of this option.)
.IP
[Non-VMS] Note that before UnZip version 6.10, on a non-VMS system, a
file with a name like "\fCfred;123\fR" would, by default, be extracted
as "\fCfred\fR", even if the file did not originate on a VMS system (so
that "\fC;123\fR" was probably not really a VMS version number).
Beginning with UnZip version 6.10, the default behavior is to strip VMS
version numbers only from files which were archived on a VMS system.  To
restore the old behavior, and always strip apparent VMS version numbers,
explicitly negate the option: \fB\-V\-\fP.
.IP
[VMS] Note that on VMS, \fB\-V\fP affects \fIonly\fP version numbers,
and is \fInot\fP needed to restore VMS file attributes.  \fBZip\fP's
\fB\-V\fP (\fB/VMS\fP) option is required to \fIstore\fP VMS attributes
in an archive.  If that was done when an archive was created, then
\fBUnZipSFX\fP will always \fIrestore\fP those attributes when a file is
extracted.
.PP
.PD 0
.B \-W
.TP
.PD
.B \-\-wild\-no\-span
.br
[WILD_STOP_AT_DIR] (Valid when the program was built with the C macro
WILD_STOP_AT_DIR defined.)  By default, the wildcard characters "?"
(single-character wildcard) and "*" (multi-character wildcard) match any
character in a member path/name.  "\fC\-W\fR" modifies the
pattern-matching behavior for archive members so that both "?"
(single-character wildcard) and "*" (multi-character wildcard) do not
match the directory separator character "/".  (The two-character
sequence "**" acts as a multi-character wildcard that includes the
directory separator in its matched characters.)  For example, with
"\fC\-W\fR":
.PP
.EX
    "*.c" matches "foo.c" but not "mydir/foo.c"
    "**.c" matches both "foo.c" and "mydir/foo.c"
    "*/*.c" matches "bar/foo.c" but not "baz/bar/foo.c"
    "??*/*" matches "ab/foo" and "abc/foo"
            but not "a/foo" or "a/b/foo"
.EE
.IP
This modified behavior is equivalent to the pattern matching style used
by the shells of some of \fIUnZipSFX\fP's supported target OSs (one example
is Acorn RISC OS).  This option may not be available on systems where
the Zip archive's internal directory separator character "/" is allowed
as regular character in native operating system filenames.
.IP
[non-VMS] Currently, \fIUnZipSFX\fP uses the same pattern matching rules
for both wildcard archive file name specifications and archive member
selection patterns on most system types.  For systems allowing "/" as
regular filename character, the \-W option would not work as expected on
a wildcard file name specification.
.PP
.PD 0
.B \-X
.TP
.PD
.B \-\-restore\-info
.br
[VMS, Unix, OS/2, NT, Tandem] Restore owner info (UIC on VMS, or user
and group info (UID/GID) on Unix, or access control lists (ACLs) on
certain network-enabled versions of OS/2 (Warp Server with IBM LAN
Server/Requester 3.0 to 5.0; Warp Connect with IBM Peer 1.0), or
security ACLs on Windows NT.)  In most cases this will require special
system privileges, and doubling the option (\fB\-XX\fP) on NT instructs
\fIUnZipSFX\fP to use privileges for extraction; but on Unix, for example,
a user who belongs to several groups can restore files owned by any of
those groups, so long as the user IDs match the user's own. Note that
ordinary file attributes are always restored.  This option applies only
to optional, extra ownership info available on some operating systems.
(NT's access control lists do not appear to be especially compatible
with OS/2's, so no attempt is made at cross-platform portability of
access privileges.  It is not clear under which conditions this would
ever be useful anyway.)
.PP
.PD 0
.BR "\-x member" " ..."
.TP
.PD
.BR "\-\-exclude member" " ..."
.br
An optional list of archive members to be excluded from
processing.  Because wildcard characters normally match "/" directory
separators (for exceptions, see the option \fB\-W\fP), this option may
be used to exclude any files that are in subdirectories.  For example,
"\fCunzip\ foo\ *.[ch]\ \-x\ */*\fR" would extract all C source files
(*.c, *.h) in the main directory, but none in any subdirectories. 
Without the \fB\-x\fP option, all C source files in all directories in
the archive would be extracted.
.IP
When the program sees \fB\-x\fP (\fB\-\-exclude\fP) on a command line,
it stops scanning for options, and treats every succeeding item as an
archive member name.  To avoid any confusion between member names and
command options, it's simplest to specify \fB\-x\fP (\fB\-\-exclude
member\fP) and its member list as the \fIlast\fP items on a command
line.  Alternatively, the special name "@" can be used to terminate the
member list (and cause the program to resume scanning for options). 
That is, for example, the following two commands are equivalent:
.EX
      example_sfx -b -x file1 file2 file3
      example_sfx -x file1 file2 file3 @ -b
.EE
.PP
.PD 0
.B \-Y
.TP
.PD
.B \-\-dot\-version
.br
[VMS] Treat archive member name endings of ".nnn" (where "nnn" is a
decimal number) as if they were VMS version numbers (";nnn").  (The
default is to treat them as file types.)  For example:
.EX
     "a.b.3" -> "a.b;3"
.EE
.PP
.PD 0
.B \-z
.TP
.PD
.B \-\-zipfile\-comment
.br
Primary mode.  Display only the archive comment.  For details, see
Primary Mode options.
.PP
.PD 0
.B \-$
.TP
.PD
.B \-\-volume\-labels
.br
.\" [Amiga support possible eventually, but not yet.]
[MS-DOS, NT, OS/2, VMS] Restore the volume label if the extraction
medium is removable (for example, a diskette).  Doubling the option
(\fB\-$$\fP) allows fixed media (hard disks) to be labeled as well.  By
default, volume labels are ignored.
.br
[VMS] On VMS, a volume must be allocated, not shared, for a volume label
to be set.
.PP
.PD 0
.B \-/
.TP
.PD
.B \-\-extensions
.br
[Acorn] Overrides the extension list supplied by the \fBUnzip$Ext\fP
environment variable.  During extraction, filename extensions that match
one of the items in this extension list are swapped in front of the base
name of the extracted file.
.PP
.PD 0
.B \-:
.TP
.PD
.B \-\-do\-double\-dots
.br
[all but Acorn, VM/CMS, MVS, Tandem] Allows \fIUnZipSFX\fP to extract
archive members into locations outside of the current extraction
destination directory (and its subdirectories).
.IP
For security reasons, \fIUnZipSFX\fP normally removes "parent directory"
path components ("../") from the path names of archive members as they
are extracted.  This safety feature (new for version 5.50) prevents
\fIUnZipSFX\fP from accidentally writing files to directories outside
the current destination directory tree.  The \fB\-:\fP option sets
\fIUnZipSFX\fP back to its previous, more liberal behavior, allowing exact
extraction of archives that use "../" path components to create multiple
directory trees at \fIor above\fP the level of the destination
directory.
.IP
This option does not enable writing explicitly to the root
directory ("/").  To achieve this, it is necessary to set the extraction
target folder to "/" (by using an option like "\fB\-d\ /\fP").  However,
when the \fB\-:\fP option is specified, it is still possible implicitly
to write to the root directory if member paths specifying enough "../"
path components.
.IP
\fIUse this option with extreme caution.\fP
.PP
.PD 0
.B \-^
.TP
.PD
.B \-\-control\-in\-name
.br
[Unix] Allow control characters in file names of extracted ZIP archive
members.  On Unix, a file name may contain any (8-bit) character code
with the two exceptions of "/" (the directory delimiter) and NUL (0x00,
the C string-termination character), unless the specific file system has
more restrictive conventions.  Generally, this allows embedding ASCII
control characters or escape sequences in file names.  However, this
feature allows the use of malicious file names which can cause various
kinds of bad trouble when displayed on a user's
terminal/emulator.  (Even a file name with unprintable but otherwise
harmless characters can cause problems for users.)
.IP
For these reasons, by default, \fIUnZipSFX\fP applies a filter that removes
potentially dangerous control characters from the extracted file
names.  The \fB\-^\fP option overrides this filter in the rare case that
embedded filename dangerous control characters are to be intentionally
restored.
.PP
.\" =========================================================================
.SH "ENVIRONMENT OPTIONS"
\fIUnZipSFX\fP uses the same environment variables as \fIUnZip\fP does,
although this is more likely to affect the person creating and testing a
self-extracting archive than it is the SFX user.  For details, see the
\fIunzip\fP manual page.
.PD
.\" =========================================================================
.SH ENCRYPTION/DECRYPTION
\fIUnZipSFX\fP supports the same encryption methods as \fIUnZip\fP, but
encryption support in \fIUnZipSFX\fP must be explicitly enabled at build
time.  For details, see the \fIUnZip\fP installation instructions
(INSTALL).
.PD
.\" =========================================================================
.SH AUTORUN COMMAND
When \fIUnZipSFX\fP is built with CHEAP_SFX_AUTORUN defined, a simple
"command autorun" feature is enabled.  The command to be run is placed
at the beginning of the Zip archive comment, using the following format:
.PP
.EX
$AUTORUN$>command-to-be-run
.EE
.PP
When \fIUnZipSFX\fP recognizes the token "$AUTORUN$>" at the beginning
of the ZIP archive comment, the remainder of the first line of the
comment (until the first newline character) is passed as a shell command
to the operating system using the C RTL system() function.  Before
executing the command, \fIUnZipSFX\fP displays the command on the
console and prompts the user for confirmation.  For safety, when the
user has switched off prompting by specifying the \fB\-q\fP option,
an autorun command is not executed.
.PP
If the archive comment contains additional lines of text, then those
additional comment lines are displayed normally, unless quiet operation
was requested using a \fB\-q\fP option.
.PD
.\" =========================================================================
.SH EXAMPLES
On Unix, the following commands create a self-extracting archive
(\fIexample_sfx\fP) from an ordinary archive (\fIexample.zip\fP), adjust
the offsets in the resulting SFX archive, and change the permissions on
the new SFX archive's to allow execution by everyone:
.PP
.EX
cat /usr/local/bin/unzipsfx example.zip > example_sfx
zip \-A example_sfx
chmod 755 example_sfx
.EE
.PP
We assume that the desired \fIUnZipSFX\fP executable is found at
"/usr/local/bin/unzipsfx", but any path to the desired \fIUnZipSFX\fP
executable is ok.
.PP
On MS-DOS, OS/2, or Windows, the following commands create a similar SFX
archive.  (Note the use of the \fB/b\fP (binary) option in the COPY
command.):
.PP
.EX
copy /b unzipsfx.exe+example.zip example_sfx.exe
zip \-A example_sfx.exe
.EE
.PP
If the desired \fIUnZipSFX\fP executable is not in the current
directory, then an appropriate path should be specified for it.
.PP
On VMS the basic commands look like these:
.PP
.EX
copy unzipsfx.exe, example.zip example_sfx.exe
zip \-A example_sfx.exe
.EE
.PP
If the desired \fIUnZipSFX\fP executable is not in the current
default directory, then an appropriate path should be specified for
it.  (The VMS APPEND command could be used instead of COPY.)
.PP
A slightly more elaborate DCL script to do this job is included in the
\fIUnZip\fP source kit: [.vms]makesfx.com.  It uses a DCL symbol to find
the \fIUnZipSFX\fP executable.  Comments in the script explain its
usage.
.PP
.EX
@ makesfx.com example.zip example_sfx.exe
.EE
.PP
As usual on VMS, if a program like an \fIUnZipSFX\fP bundle is to be
executed without options or arguments, then the RUN command may be
used.  For example:
.EX
run example_sfx.exe
.EE
.PP
More work is needed when options or arguments are desired.  For example:
.EX
mcr sys$disk:[]example_sfx.exe -t -x fred.txt
.EE
Or, define a foreign-command DCL symbol, and use that:
.EX
example_sfx = "$ ''f$environment( "default")'example_sfx.exe"
example_sfx \-t \-x fred.txt
.EE
.PP
On AmigaDOS:
.PP
.EX
MakeSFX example example.zip UnZipSFX
.EE
.PP
(MakeSFX is included with the UnZip source distribution and with Amiga
binary distributions.  "\fCzip -A\fR" doesn't work on Amiga
self-extracting archives.)
.PP
To test (or list) the newly created self-extracting archive, use
\fB\-t\fP:
.PP
.EX
example_sfx \-t
.EE
.PP
To test "example_sfx" quietly, printing only a summary message
indicating whether the archive is OK or not, use \fB\-tqq\fP:
.PP
.EX
example_sfx \-tqq
.EE
.PP
To extract the complete contents into the current directory, recreating
all files and subdirectories as necessary:
.PP
.EX
example_sfx
.EE
.PP
To extract all \fC*.txt\fR files:
.PP
.EX
example_sfx *.txt
.EE
.PP
On Unix, quote the "*":
.PP
.EX
example_sfx '*.txt'
.EE
.PP
To extract everything \fIexcept\fP the \fC*.txt\fR files:
.PP
.EX
example_sfx \-x *.txt
.EE
or:
.EX
example_sfx \-x '*.txt'
.EE
.PP
To extract only the README file to standard output (the screen):
.PP
.EX
example_sfx \-c README
.EE
.PP
To print only the archive comment:
.PP
.EX
example_sfx \-z
.EE
.PD
.\" =========================================================================
.SH LIMITATIONS
The principal and fundamental limitation of \fIUnZipSFX\fP is that it is
not generally portable from one operating system or hardware
architecture to another.  Therefore, neither are the resulting SFX
archives, \fIas self-extracting archives\fP.  The ZIP archive within a
self-extracting archive bundle \fIcan\fP always be processed anywhere
using a normal \fIUnZip\fP program, even where the \fIUnZipSFX\fP
program in the bundle can't do the job.  At worst, \fIUnZip\fP will emit
a warning like "nnnn extra bytes at beginning or within zipfile", but
using "zip\ \-A" on an SFX bundle will prevent even that
annoyance.  (\fIUnZipSFX\fP itself does not emit the "extra bytes"
warning, even if the "zip\ \-A" adjustment is not done.)
.PP
Strictly speaking, until "zip\ \-A" is used to adjust the offsets
within the \fIUnZipSFX\fP+archive bundle, that bundle is not a valid ZIP
archive, because the offsets in it are wrong.  \fIInfo-ZIP UnZip\fP can
still work with it (emitting that "extra bytes" warning mentioned
above), but some other unzipping program might have more trouble with
it.  After the "zip\ \-A" offset adjustment has been done, any unzipping
program should be able to work with the resulting SFX bundle.
.PP
To do its work, the \fIUnZipSFx\fP program in a self-extracting archive
must open and read the self-extracting archive file itself.  (It's not
enough that the shell can find it.  It must be able to find itself.)
\fIUnZipSFX\fP has no knowledge of the user's PATH, so, in general, a
self-extracting archive must either be in the current directory when it
is invoked (and "." must be on the user's PATH), or else some explicit
(absolute or relative) path must be specified.  For example:
.PP
.EX
# example_sfx -t        # Fails if "." is not on PATH.
bash: example_sfx: command not found
# ./example_sfx -t      # Works.
.EE
or:
.EX
mkdir sandbox
cd sandbox
../example_sfx
.EE
.PP
If a user runs a self-extracting archive which is found in a directory
on the PATH other than the current one ("."), then \fIUnZipSFX\fP may
fail with a fatal error: "cannot find myself!".  This is always true on
Unix, and may be true in some cases under MS-DOS, depending on the
compiler used. (Microsoft C may fully qualify the program name, but
other compilers may not.)  Under OS/2 and NT there are operating-system
functions available that provide the full path name, so the archive may
be invoked from anywhere in the user's path.  On VMS, this problem never
arises, because the program always sees an absolute path to itself, even
when DCL$PATH is used.  (The situation is unknown for more obscure
operating systems: AmigaDOS, Atari TOS, and so on.  Reports are
welcome.)
.PP
As explained above, some normal \fIUnZip\fP features are omitted from
\fIUnZipSFX\fP to make it smaller.  The diagnostic (\fB\-v\fP) and
listing (\fB\-l\fP) features are always omitted.  Optional compression
methods (bzip2, LZMA, PPMd) and any encryption methods (Traditional,
AES_WG) are omitted by default, but may be enabled when \fIUnZipSFX\fP
is built.  For details, see the installation instructions (INSTALL).
.PP
\fIUnZipSFX\fP on the Amiga requires the use of a special program,
\fIMakeSFX\fP, to create working self-extracting archives; simple
concatenation does not work.  (For technically oriented users, the
attached archive is defined as a "debug hunk".)  There may be
compatibility problems between the ROM levels of older Amigas and newer
ones.
.PD
.\" =========================================================================
.SH "EXIT STATUS"
The possible exit status values from \fIUnZipSFX\fP are the same as
those for \fIUnZipSFX\fP.  See the \fIunzip\fP manual page for details.
.PD
.\" =========================================================================
.SH "SEE ALSO"
\fIfunzip\fP(1L), \fIunzip\fP(1L), \fIzip\fP(1L), \fIzipcloak\fP(1L),
.br
\fIzipgrep\fP(1L), \fIzipinfo\fP(1L), \fIzipnote\fP(1L), \fIzipsplit\fP(1L)
.PD
.\" =========================================================================
.SH URL
.TP
The Info-ZIP main Web page is:
.EX
\fChttp://www.info-zip.org/\fR
.EE
.TP
FTP access is available, too:
.EX
\fCftp://ftp.info-zip.org/pub/infozip/\fR
.EE
.PD
.\" =========================================================================
.SH AUTHORS
Greg Roelofs was responsible for the basic modifications to \fIUnZip\fP
necessary to create UnZipSFX.  See \fIunzip\fP(1L) for the current list
of Info-ZIP authors.
.PD
