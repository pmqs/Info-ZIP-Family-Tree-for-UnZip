
      globals.h:

char      *zipfn_part;         char      *zipfn_sgmnt
int       zipfn_part_size;     int       zipfn_sgmnt_size
zuvl_t    actual_disknumber;   zuvl_t    sgmnt_nr
ulg       zipfd_part_size;     z_uint4   sgmnt_size
 #  ifdef USE_STRM_INPUT
FILE      *zipfd_part;         FILE      *zipfd_sgmnt
 #  else
int       zipfd_part;          int       zipfd_sgmnt



      unzpriv.h

#  define CLOSE_PART_INFILE()   CLOSE_INFILE_SGMNT()
    close_part_infile(__G)       close_infile_sgmnt(__G)

#  define CLOSE_INFILE()        CLOSE_INFILE()
    close_input_file(__G)        close_infile(__G)

#  define CLOSE_PART_INFILE()   CLOSE_INFILE_SGMNT()
    close_input_part_file(__G)   close_infile_sgmnt(__G)

   Move [.zos]vmmvs.c:close_infile() code up to fileio.c.
   Move close_infile() prototype out of CMS_MVS block.


int      open_input_part_file OF((__GPRO));   open_infile_sgmnt

void     close_input_file     OF((__GPRO));   close_infile
void     close_input_part_file OF((__GPRO));  close_infile_sgmnt

int      open_next_input_part_file OF((__GPRO__ int movement));
                                              open_infile_sgmnt

int      set_zipfn_part_name  OF((__GPRO__ zuvl_t disknum));
                                              set_zipfn_sgmnt_name

FILE  *vmmvs_open_part_infile   OF((__GPRO)); vmmvs_open_infile_sgmnt
void   close_part_infile        OF((__GPRO)); vmmvs_close_infile_sgmnt ???

open_input_file()                             open_infile

      extract.c

close_segment()


      fileio.c

Need CLOSE_INFILE
     CLOSE_INFILE_SGMNT
     OPEN_INFILE
     OPEN_INFILE_SGMNT
     SET_ZIPFN_SGMNT_NAME
